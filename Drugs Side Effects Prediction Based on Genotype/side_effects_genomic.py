# -*- coding: utf-8 -*-
"""side_effects_genomic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aFbyxYOp8l8eBxEDHcYuzwgZQiRqn30D
"""

import csv
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder


def load_drug_data(file_path):
    drug_data = []
    with open(file_path, 'r', newline='') as file:
        reader = csv.DictReader(file)
        for row in reader:
            drug_data.append(row)
    return drug_data

def preprocess_drug_data(drug_data):
    X = []
    y = []

    drug_label_encoder = LabelEncoder()
    drug_label_encoder.fit([row['Drug Name'] for row in drug_data])

    genotype_label_encoder = LabelEncoder()
    genotype_label_encoder.fit([row['Genotype'] for row in drug_data])

    for row in drug_data:
        gender = 0 if row['Gender'] == 'M' else 1
        drug_name = drug_label_encoder.transform([row['Drug Name']])[0]
        genotype = genotype_label_encoder.transform([row['Genotype']])[0]
        X.append([int(row['Age']), gender, int(row['Height']), int(row['Weight']), drug_name, genotype])
        y.append((row['Side Effect 1'], row['Side Effect 2'], int(row['Severity'])))
    return np.array(X), np.array(y), drug_label_encoder, genotype_label_encoder

def train_random_forest_model(X_train, y_train):
    rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
    rf_model.fit(X_train, y_train)
    return rf_model


def predict_side_effects(model, age, gender, height, weight, drug_name, genotype, drug_label_encoder, genotype_label_encoder):
    gender = 0 if gender == 'M' else 1
    drug_name = drug_label_encoder.transform([drug_name])[0]
    genotype = genotype_label_encoder.transform([genotype])[0]
    prediction = model.predict([[age, gender, height, weight, drug_name, genotype]])
    return prediction[0]

def main():
    drug_data = load_drug_data("side_effect_genotype.csv")
    X, y, drug_label_encoder, genotype_label_encoder = preprocess_drug_data(drug_data)

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    rf_model = train_random_forest_model(X_train, y_train)

    while True:
        age = int(input("Enter age: "))
        gender = input("Enter gender (M/F): ")
        height = int(input("Enter height (in cm): "))
        weight = int(input("Enter weight (in kg): "))
        drug_name = input("Enter drug name: ")
        genotype = input("Enter genotype JSON file path: ")

        prediction = predict_side_effects(rf_model, age, gender, height, weight, drug_name, genotype, drug_label_encoder, genotype_label_encoder)

        print("Predicted Side Effects:", prediction[0] + " " + prediction[1])
        print("Risk level(out of 10):", prediction[2])

        continue_option = input("Do you want to continue? (yes/no): ")
        if continue_option.lower() != "yes":
            break

if __name__ == "__main__":
    main()